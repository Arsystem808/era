import os, streamlit as st, pandas as pd
from polygon_data import get_daily_ohlc
from core_strategy import plan_for_user
from narrator import speak
from backtest import run_backtest

st.set_page_config(page_title="CapIntel-Q ‚Ä¢ Polygon", page_icon="üß≠", layout="centered")

st.title("CapIntel-Q ‚Äî Polygon Edition")

with st.sidebar:
    st.subheader("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    st.write(f"Polygon –∫–ª—é—á: {'–û–ö' if os.getenv('POLYGON_API_KEY') else '–Ω–µ—Ç'}")
    st.write("Python: –û–ö")
    st.caption("–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: Polygon.io (–∞–≥–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–Ω–µ–≤–Ω—ã–µ —Å–≤–µ—á–∏)")

ticker = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, QQQ, AAPL, X:BTCUSD):", "QQQ")
horizon = st.selectbox("–ì–æ—Ä–∏–∑–æ–Ω—Ç:", ["–¢—Ä–µ–π–¥ (1‚Äì5 –¥–Ω–µ–π)", "–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (1‚Äì4 –Ω–µ–¥–µ–ª–∏)", "–î–æ–ª–≥–æ—Å—Ä–æ–∫ (1‚Äì6 –º–µ—Å—è—Ü–µ–≤)"])

col1, col2 = st.columns(2)
with col1:
    if st.button("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", use_container_width=True):
        try:
            df = get_daily_ohlc(ticker, years=5)
            v = plan_for_user(df, horizon)
            st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç")
            st.write(speak(ticker, horizon, v))
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {e}")

with col2:
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ç–∫—Ç–µ—Å—Ç", use_container_width=True):
        try:
            table, win = run_backtest(ticker, years=5, horizon=horizon)
            st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—ç–∫—Ç–µ—Å—Ç–∞")
            if isinstance(table, pd.DataFrame) and len(table)>0:
                st.dataframe(table, use_container_width=True, height=380)
                st.success(f"–ü—Ä–æ—Ü–µ–Ω—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è TP (–ø–æ TP1): {win*100:.1f}%")
            else:
                st.info("–°–∏–≥–Ω–∞–ª–æ–≤ –ø–æ –±–∞–∑–æ–≤–æ–º—É –ø–ª–∞–Ω—É –Ω–µ –±—ã–ª–æ.")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –±—ç–∫—Ç–µ—Å—Ç–∞: {e}")
